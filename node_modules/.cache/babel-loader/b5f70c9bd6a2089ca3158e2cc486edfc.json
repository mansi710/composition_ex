{"ast":null,"code":"import { ref, reactive } from \"vue\";\nexport default {\n  name: \"ReplacingDataWithReactive\",\n\n  setup() {\n    //for every property we invoke ref function or\n    //when accessing the value or assiging a new value we would to need .value every single time.\n    //so reactive function can comes under picture\n    const c_firstName = ref(\"arrav\");\n    const c_lastName = ref(\"ganglani\");\n    const c_heroName = ref(\"niraj\");\n    const greet = `hello ${c_firstName.value} ${c_lastName.value} ${c_heroName.value}`; // unlike the ref function  reactive accepts an object as its argument\n    // and within an object we can define the different properties\n\n    const state = reactive({\n      firstName: \"dimpi\",\n      lastName: \"ganglani\",\n      heroName: \"Dinesh\" // reactive return the reactive reference which we can store in a constant\n\n    }); // we can create new greet msg using the const state\n\n    const reactiveGreetHero = `Reactive ${state.firstName} ${state.lastName} ${state.heroName}`;\n    return {\n      c_firstName,\n      c_lastName,\n      c_heroName,\n      greet,\n      state,\n      reactiveGreetHero\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAeA,SAASA,GAAT,EAAcC,QAAd,QAA8B,KAA9B;AACA,eAAe;EACbC,IAAI,EAAE,2BADO;;EAEbC,KAAK,GAAG;IACN;IACA;IACA;IACA,MAAMC,WAAU,GAAIJ,GAAG,CAAC,OAAD,CAAvB;IACA,MAAMK,UAAS,GAAIL,GAAG,CAAC,UAAD,CAAtB;IACA,MAAMM,UAAS,GAAIN,GAAG,CAAC,OAAD,CAAtB;IAEA,MAAMO,KAAI,GAAK,SAAQH,WAAW,CAACI,KAAK,IAAIH,UAAU,CAACG,KAAK,IAAIF,UAAU,CAACE,KAAM,EAAjF,CARM,CAUN;IACA;;IACA,MAAMC,KAAI,GAAIR,QAAQ,CAAC;MACrBS,SAAS,EAAE,OADU;MAErBC,QAAQ,EAAE,UAFW;MAGrBC,QAAQ,EAAE,QAHW,CAKrB;;IALqB,CAAD,CAAtB,CAZM,CAoBN;;IACA,MAAMC,iBAAgB,GAAK,YAAWJ,KAAK,CAACC,SAAS,IAAID,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,QAAS,EAA1F;IAEA,OAAO;MACLR,WADK;MAELC,UAFK;MAGLC,UAHK;MAILC,KAJK;MAKLE,KALK;MAMLI;IANK,CAAP;EAQD;;AAjCY,CAAf","names":["ref","reactive","name","setup","c_firstName","c_lastName","c_heroName","greet","value","state","firstName","lastName","heroName","reactiveGreetHero"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReplacingDataWithReactive.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>REPLACING DATA WITH REACTIVE</h3>\n    <h4>{{ c_firstName }} {{ c_lastName }} {{ c_heroName }}</h4>\n    <h4>{{ greet }}</h4>\n    <h4>Reactive {{ firstName }} {{ lastName }} {{ heroName }}</h4>\n    <h4>Reactive Greet {{ reactiveGreetHero }}</h4>\n  </div>\n\n  <!-- use ref wehn deleaning with premitive types string , boolean ,  number so on -->\n  <!-- reavctive can only accept object -->\n</template>\n\n\n<script>\nimport { ref, reactive } from \"vue\";\nexport default {\n  name: \"ReplacingDataWithReactive\",\n  setup() {\n    //for every property we invoke ref function or\n    //when accessing the value or assiging a new value we would to need .value every single time.\n    //so reactive function can comes under picture\n    const c_firstName = ref(\"arrav\");\n    const c_lastName = ref(\"ganglani\");\n    const c_heroName = ref(\"niraj\");\n\n    const greet = `hello ${c_firstName.value} ${c_lastName.value} ${c_heroName.value}`;\n\n    // unlike the ref function  reactive accepts an object as its argument\n    // and within an object we can define the different properties\n    const state = reactive({\n      firstName: \"dimpi\",\n      lastName: \"ganglani\",\n      heroName: \"Dinesh\",\n\n      // reactive return the reactive reference which we can store in a constant\n    });\n\n    // we can create new greet msg using the const state\n    const reactiveGreetHero = `Reactive ${state.firstName} ${state.lastName} ${state.heroName}`;\n\n    return {\n      c_firstName,\n      c_lastName,\n      c_heroName,\n      greet,\n      state,\n      reactiveGreetHero,\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}