{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"REUSABILITY WITH MIXINS EXAMPLE\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" when you are using reusable function with composition api\\n     thay are call hooks and composables \"), _hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.incrementCount && _ctx.incrementCount(...args))\n  }, \"Click \" + _toDisplayString(_ctx.count) + \" times\", 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;gCAIIA,oBAAwC,IAAxC,EAAwC,IAAxC,EAAI,iCAAJ,EAAmC;AAAA;AAAnC;;;uBAHFC,oBAKM,KALN,EAKM,IALN,EAKM,CAJJC,4HAII,EAFJC,UAEI,EADJH,oBAAgE,QAAhE,EAAgE;IAAvDI,OAAK,yCAAEC,mDAAF;EAAkD,CAAhE,EAAgC,WAAMC,iBAAGD,UAAH,CAAN,GAAiB,QAAjD,EAAuD;EAAA;EAAvD,CACI,CALN","names":["_createElementVNode","_createElementBlock","_createCommentVNode","_hoisted_1","onClick","_ctx","_toDisplayString"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ClickCounterExample.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- when you are using reusable function with composition api\n     thay are call hooks and composables -->\n    <h3>REUSABILITY WITH MIXINS EXAMPLE</h3>\n    <button @click=\"incrementCount\">Click {{ count }} times</button>\n  </div>\n</template>\n\n<script>\nimport { useCounter } from \"../composables/useCounter\";\nexport default {\n  name: \"ClickCounterExample\",\n\n  setup() {\n    //useCounter() returns an object with count and \n    const { count, incrementCount } = useCounter();\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}