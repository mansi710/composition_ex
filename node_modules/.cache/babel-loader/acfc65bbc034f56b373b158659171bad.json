{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"CHILD C\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"h4\", null, \"Child Component C composition c_username \" + _toDisplayString(_ctx.childUserName), 1\n  /* TEXT */\n  ), _createElementVNode(\"h4\", null, \"Child Component C count \" + _toDisplayString(_ctx.childCount), 1\n  /* TEXT */\n  ), _createElementVNode(\"h4\", null, \"Child Component C hero \" + _toDisplayString(_ctx.firstName) + \" \" + _toDisplayString(_ctx.lastName), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;;uBADFC,oBAMM,KANN,EAMM,IANN,EAMM,CALJC,UAKI,EAJJF,oBAAqE,IAArE,EAAqE,IAArE,EAAI,8CAAyCG,iBAAGC,kBAAH,CAA7C,EAA6D;EAAA;EAA7D,CAII,EAFJJ,oBAAiD,IAAjD,EAAiD,IAAjD,EAAI,6BAAwBG,iBAAGC,eAAH,CAA5B,EAAyC;EAAA;EAAzC,CAEI,EADJJ,oBAA8D,IAA9D,EAA8D,IAA9D,EAAI,4BAAuBG,iBAAGC,cAAH,CAAvB,GAAsC,GAAtC,GAAuCD,iBAAGC,aAAH,CAA3C,EAAsD;EAAA;EAAtD,CACI,CANN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","_ctx"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ChildC.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>CHILD C</h3>\n    <h4>Child Component C composition c_username {{ childUserName }}</h4>\n\n    <h4>Child Component C count {{ childCount }}</h4>\n    <h4>Child Component C hero {{ firstName }} {{ lastName }}</h4>\n  </div>\n</template>\n\n<script>\nimport { inject, toRefs } from \"vue\";\nexport default {\n  name: \"ChildC\",\n  //   inject: [\"username\"],\n\n  setup() {\n    //1 st argument label of the value that is provioded\n    //2 nd argument is optional and default value if there is no value provided from the parent\n    //which we will store in constant and bind with template\n    const childUserName = inject(\"c_username\", \"Default Username\");\n    const childCount = inject(\"c_count\", 0);\n    const childHero = inject(\"c_hero\", {});\n    const \n\n    return {\n      childUserName,\n      childCount,\n      ...toRefs(childHero),\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}