{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"REPLACING COMPUTED PROPERTIES\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h4\", null, \"OptionAPI Fullname is \" + _toDisplayString(_ctx.fullName), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"first name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.fName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.fName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"last name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.lName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.lName]]), _hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"first name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.refFirstName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.refFirstName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"last name\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.refLastName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.refLastName]]), _createElementVNode(\"h4\", null, \"Compposition API Fullname is \" + _toDisplayString(_ctx.refFullName), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;gCAMIA,oBAAsC,IAAtC,EAAsC,IAAtC,EAAI,+BAAJ,EAAiC;AAAA;AAAjC;;;uBALFC,oBASM,KATN,EASM,IATN,EASM,CARJD,oBAA6C,IAA7C,EAA6C,IAA7C,EAAI,2BAAsBE,iBAAGC,aAAH,CAA1B,EAAqC;EAAA;EAArC,CAQI,kBAPJH,oBAA8D,OAA9D,EAA8D;IAAvDI,IAAI,EAAC,MAAkD;IAA3CC,WAAW,EAAC,YAA+B;+DAATF,aAAKG;EAAI,CAA9D;;EAAA,kBAAqDH,aAOjD,kBANJH,oBAA6D,OAA7D,EAA6D;IAAtDI,IAAI,EAAC,MAAiD;IAA1CC,WAAW,EAAC,WAA8B;+DAATF,aAAKG;EAAI,CAA7D;;EAAA,kBAAoDH,aAMhD,EAJJI,UAII,kBAHJP,oBAAqE,OAArE,EAAqE;IAA9DI,IAAI,EAAC,MAAyD;IAAlDC,WAAW,EAAC,YAAsC;+DAAhBF,oBAAYG;EAAI,CAArE;;EAAA,kBAAqDH,oBAGjD,kBAFJH,oBAAmE,OAAnE,EAAmE;IAA5DI,IAAI,EAAC,MAAuD;IAAhDC,WAAW,EAAC,WAAoC;+DAAfF,mBAAWG;EAAI,CAAnE;;EAAA,kBAAoDH,mBAEhD,EADJH,oBAAuD,IAAvD,EAAuD,IAAvD,EAAI,kCAA6BE,iBAAGC,gBAAH,CAAjC,EAA+C;EAAA;EAA/C,CACI,CATN","names":["_createElementVNode","_createElementBlock","_toDisplayString","_ctx","type","placeholder","$event","_hoisted_1"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReplacingComputedProperties.vue"],"sourcesContent":["<template>\n  <div>\n    <h4>OptionAPI Fullname is {{ fullName }}</h4>\n    <input type=\"text\" placeholder=\"first name\" v-model=\"fName\" />\n    <input type=\"text\" placeholder=\"last name\" v-model=\"lName\" />\n\n    <h3>REPLACING COMPUTED PROPERTIES</h3>\n    <input type=\"text\" placeholder=\"first name\" v-model=\"refFirstName\" />\n    <input type=\"text\" placeholder=\"last name\" v-model=\"refLastName\" />\n    <h4>Compposition API Fullname is {{ refFullName }}</h4>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed } from \"vue\";\nexport default {\n  name: \"ReplacingComputedProperties\",\n  setup() {\n    //WITH REF\n    const refFirstName = ref(\"\");\n    const refLastName = ref(\"\");\n    //this functions accepts a function as it's argument which returns computed value\n    const refFullName = computed(function () {\n      return `${refFirstName.value} ${refLastName.value}`;\n    });\n\n    //WITH REACTIVE\n    const state = reactive({\n      reactiveFirstName: \"\",\n      reactiveLastName: \"\",\n    });\n\n    return {\n      refFullName,\n      refFirstName,\n      refLastName,\n      ...\n    };\n  },\n  data() {\n    return {\n      fName: \"\",\n      lName: \"\",\n    };\n  },\n  computed: {\n    fullName() {\n      return `${this.fName} ${this.lName}`;\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}