{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"PropsCompositionApiChild\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" this file is the child component \"), _createElementVNode(\"div\", null, [_hoisted_1, _createCommentVNode(\" <h5>Hello Child Props {{ firstName }} {{ lastName }}</h5> \"), _createElementVNode(\"h5\", null, \"Hello Child props with computed \" + _toDisplayString(), 1\n  /* TEXT */\n  ), _createCommentVNode(\" the better way to define our template replace the first \\n    and last name with a signle computed properties \")])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGIA,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,EAA4B;AAAA;AAA5B;;;6DAFFC,2DACAD,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJE,UAMI,EALJD,kFAKI,EAJJD,oBAA6C,IAA7C,EAA6C,IAA7C,EAAI,qCAAgCG,kBAApC,EAAsC;EAAA;EAAtC,CAII,EAFJF,sIAEI,CAPN","names":["_createElementVNode","_createCommentVNode","_hoisted_1","_toDisplayString"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/PropsCompositionApiChild.vue"],"sourcesContent":["<template>\n  <!-- this file is the child component -->\n  <div>\n    <h4>PropsCompositionApiChild</h4>\n    <!-- <h5>Hello Child Props {{ firstName }} {{ lastName }}</h5> -->\n    <h5>Hello Child props with computed {{}}</h5>\n\n    <!-- the better way to define our template replace the first \n    and last name with a signle computed properties -->\n  </div>\n</template>\n\n<script>\nimport { computed } from \"vue\";\nexport default {\n  name: \"PropsCompositionApiChild\",\n  props: [\"firstName\", \"lastName\"],\n\n  //recives an argument which is the props for this component\n  setup(props) {\n    const fullName = computed(() => {\n      return `${props.firstName} ${props.lastName}`;\n    });\n\n    return {\n      fullName,\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}