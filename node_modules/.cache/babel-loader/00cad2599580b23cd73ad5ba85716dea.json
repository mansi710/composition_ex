{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"OptionAPI Watchers\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Composition API Watchers with Ref\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Composition API Watchers With Reactive\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.name]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"First Name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.firstName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.firstName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Last Name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.lastName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.lastName]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Reactive First Name\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.fName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.fName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Reactive Last Name\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.lName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.lName]])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,EAAsB;AAAA;AAAtB;;gCAGAA,oBAA0C,IAA1C,EAA0C,IAA1C,EAAI,mCAAJ,EAAqC;AAAA;AAArC;;gCAIAA,oBAA+C,IAA/C,EAA+C,IAA/C,EAAI,wCAAJ,EAA0C;AAAA;AAA1C;;;uBARFC,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJC,UAUI,kBATJF,oBAAuD,OAAvD,EAAuD;IAAhDG,IAAI,EAAC,MAA2C;IAApCC,WAAW,EAAC,MAAwB;+DAARC,aAAIC;EAAI,CAAvD;;EAAA,kBAA+CD,aAS3C,EAPJE,UAOI,kBANJP,oBAAkE,OAAlE,EAAkE;IAA3DG,IAAI,EAAC,MAAsD;IAA/CC,WAAW,EAAC,YAAmC;+DAAbI,mBAASF;EAAI,CAAlE;;EAAA,kBAAqDE,mBAMjD,kBALJR,oBAAgE,OAAhE,EAAgE;IAAzDG,IAAI,EAAC,MAAoD;IAA7CC,WAAW,EAAC,WAAiC;+DAAZI,kBAAQF;EAAI,CAAhE;;EAAA,kBAAoDE,kBAKhD,EAHJC,UAGI,kBAFJT,oBAAuE,OAAvE,EAAuE;IAAhEG,IAAI,EAAC,MAA2D;IAApDC,WAAW,EAAC,qBAAwC;+DAATM,aAAKJ;EAAI,CAAvE;;EAAA,kBAA8DI,aAE1D,kBADJV,oBAAqE,OAArE,EAAqE;IAA9DG,IAAI,EAAC,MAAyD;IAAlDC,WAAW,EAAC,oBAAsC;+DAARM,aAAKJ;EAAG,CAArE;;EAAA,kBAA6DI,aACzD,CAXN","names":["_createElementVNode","_createElementBlock","_hoisted_1","type","placeholder","$data","$event","_hoisted_2","$setup","_hoisted_3","_ctx"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReplacingWatchersRef.vue"],"sourcesContent":["<template>\n  <div>\n    <h4>OptionAPI Watchers</h4>\n    <input type=\"text\" placeholder=\"Name\" v-model=\"name\" />\n\n    <h4>Composition API Watchers with Ref</h4>\n    <input type=\"text\" placeholder=\"First Name\" v-model=\"firstName\" />\n    <input type=\"text\" placeholder=\"Last Name\" v-model=\"lastName\" />\n\n    <h4>Composition API Watchers With Reactive</h4>\n    <input type=\"text\" placeholder=\"Reactive First Name\" v-model=\"fName\" />\n    <input type=\"text\" placeholder=\"Reactive Last Name\" v-model=\"lName\"/>\n  </div>\n</template>\n\n<script>\nimport { ref, watch , reactive } from \"vue\";\nexport default {\n  name: \"ReplacingWatchersRef\",\n  setup() {\n    const firstName = ref(\"\");\n    const lastName = ref(\"twin\");\n\n\n  const state = reactive({\n      firstName: \"\",\n      lastName: \"\",\n    });\n    //the function accepts 2 argument\n    // 1 st arguments data stores to watch\n    // 2 nd argument function which  is pretty much as same we use our data option\n    //it receives oldvalue and new value as argument\n    // watch(firstName, (newValue, oldValue) => {\n    //   console.log(\"old value\", oldValue);\n    //   console.log(\"new value\", newValue);\n    // });\n\n    //watch function also expects an array of data sources as well\n    //also uses multiple sources using array\n    watch(\n      [firstName, lastName],\n      (newValues, oldValues) => {\n        console.log(\"first name old value\", oldValues[0]);\n        console.log(\"first name new value\", newValues[0]);\n        console.log(\"last name old value\", oldValues[1]);\n        console.log(\"last name new value\", newValues[1]);\n      },\n      { immediate: true }\n    );\n\n    //if watcher run on initial value as well as subsequent value you need to specify 3 rd argument\n    // to the object\n    return {\n      firstName,\n      lastName,\n    };\n  },\n  data() {\n    return {\n      name: \"\",\n    };\n  },\n  watch: {\n    name(newValue, oldValue) {\n      console.log(\"Old Value\", oldValue);\n      console.log(\"New Value\", newValue);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}