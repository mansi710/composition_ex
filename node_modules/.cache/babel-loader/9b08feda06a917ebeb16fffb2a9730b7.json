{"ast":null,"code":"import { ref, watch } from \"vue\";\nexport default {\n  name: \"ReplacingWatchers\",\n\n  setup() {\n    const firstName = ref(\"\"); //the function accepts 2 argument\n    // 1 st arguments data stores to watch\n    // 2 nd argument function which  is pretty much as same we use our data option\n    //it receives oldvalue and new value as argument \n\n    watch(firstName, (newValue, oldValue) => {\n      console.log('old value');\n    });\n    return {\n      firstName\n    };\n  },\n\n  data() {\n    return {\n      name: \"\"\n    };\n  },\n\n  watch: {\n    name(newValue, oldValue) {\n      console.log(\"Old Value\", oldValue);\n      console.log(\"New Value\", newValue);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAWA,SAASA,GAAT,EAAcC,KAAd,QAA2B,KAA3B;AACA,eAAe;EACbC,IAAI,EAAE,mBADO;;EAEbC,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIJ,GAAG,CAAC,EAAD,CAArB,CADM,CAGN;IACI;IACA;IACI;;IACRC,KAAK,CAACG,SAAD,EAAW,CAACC,QAAD,EAAUC,QAAV,KAAqB;MACjCC,OAAO,CAACC,GAAR,CAAY,WAAZ;IACH,CAFI,CAAL;IAGA,OAAO;MACLJ;IADK,CAAP;EAGD,CAfY;;EAgBbK,IAAI,GAAG;IACL,OAAO;MACLP,IAAI,EAAE;IADD,CAAP;EAGD,CApBY;;EAqBbD,KAAK,EAAE;IACLC,IAAI,CAACG,QAAD,EAAWC,QAAX,EAAqB;MACvBC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;MACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,QAAzB;IACD;;EAJI;AArBM,CAAf","names":["ref","watch","name","setup","firstName","newValue","oldValue","console","log","data"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReplacingWatchers.vue"],"sourcesContent":["<template>\n  <div>\n    <h4>OptionAPI Watchers</h4>\n    <input type=\"text\" placeholder=\"Name\" v-model=\"name\" />\n\n    <h4>Composition API Watchers</h4>\n    <input type=\"text\" placeholder=\"Name\" v-model=\"firstName\" />\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nexport default {\n  name: \"ReplacingWatchers\",\n  setup() {\n    const firstName = ref(\"\");\n\n    //the function accepts 2 argument\n        // 1 st arguments data stores to watch\n        // 2 nd argument function which  is pretty much as same we use our data option\n            //it receives oldvalue and new value as argument \n    watch(firstName,(newValue,oldValue)=>{\n        console.log('old value')\n    });\n    return {\n      firstName,\n    };\n  },\n  data() {\n    return {\n      name: \"\",\n    };\n  },\n  watch: {\n    name(newValue, oldValue) {\n      console.log(\"Old Value\", oldValue);\n      console.log(\"New Value\", newValue);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}