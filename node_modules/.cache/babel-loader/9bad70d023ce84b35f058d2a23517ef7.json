{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"OptionAPI Watchers\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Composition API Watchers\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.name]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.firstName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.firstName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.lastName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.lastName]])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,EAAsB;AAAA;AAAtB;;gCAGAA,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,EAA4B;AAAA;AAA5B;;;uBAJFC,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJC,UAMI,kBALJF,oBAAuD,OAAvD,EAAuD;IAAhDG,IAAI,EAAC,MAA2C;IAApCC,WAAW,EAAC,MAAwB;+DAARC,aAAIC;EAAI,CAAvD;;EAAA,kBAA+CD,aAK3C,EAHJE,UAGI,kBAFJP,oBAA4D,OAA5D,EAA4D;IAArDG,IAAI,EAAC,MAAgD;IAAzCC,WAAW,EAAC,MAA6B;+DAAbI,mBAASF;EAAI,CAA5D;;EAAA,kBAA+CE,mBAE3C,kBADJR,oBAA2D,OAA3D,EAA2D;IAApDG,IAAI,EAAC,MAA+C;IAAxCC,WAAW,EAAC,MAA4B;+DAAZI,kBAAQF;EAAI,CAA3D;;EAAA,kBAA+CE,kBAC3C,CAPN","names":["_createElementVNode","_createElementBlock","_hoisted_1","type","placeholder","$data","$event","_hoisted_2","$setup"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReplacingWatchers.vue"],"sourcesContent":["<template>\n  <div>\n    <h4>OptionAPI Watchers</h4>\n    <input type=\"text\" placeholder=\"Name\" v-model=\"name\" />\n\n    <h4>Composition API Watchers</h4>\n    <input type=\"text\" placeholder=\"Name\" v-model=\"firstName\" />\n    <input type=\"text\" placeholder=\"Name\" v-model=\"lastName\" />\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nexport default {\n  name: \"ReplacingWatchers\",\n  setup() {\n    const firstName = ref(\"\");\n    const lastName = ref(\"twin\");\n\n    //the function accepts 2 argument\n    // 1 st arguments data stores to watch\n    // 2 nd argument function which  is pretty much as same we use our data option\n    //it receives oldvalue and new value as argument\n    // watch(firstName, (newValue, oldValue) => {\n    //   console.log(\"old value\", oldValue);\n    //   console.log(\"new value\", newValue);\n    // });\n\n    //watch function also expects an array of data sources as well\n    watch([firstName, lastName], (newValue, oldValue) => {\n      console.log(\"old value\", oldValue);\n      console.log(\"new value\", newValue);\n    });\n    return {\n      firstName,\n      lastName,\n    };\n  },\n  data() {\n    return {\n      name: \"\",\n    };\n  },\n  watch: {\n    name(newValue, oldValue) {\n      console.log(\"Old Value\", oldValue);\n      console.log(\"New Value\", newValue);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}