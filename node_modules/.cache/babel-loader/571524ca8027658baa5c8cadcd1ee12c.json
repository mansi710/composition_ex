{"ast":null,"code":"import { computed } from \"vue\";\nexport default {\n  name: \"PropsCompositionApiChild\",\n  props: [\"firstName\", \"lastName\"],\n\n  //recives an argument which is the props for this component\n  //context is expose the emit event\n  setup(props, context) {\n    const fullName = computed(() => {\n      return `${props.firstName} ${props.lastName}`;\n    }); //how to emit a custom event in teh setup method\n\n    function sendEvent() {\n      //1 st argument custom event name\n      //2 nd argument is any value that we would like to send back to the parent\n      context.emit('callHeros');\n    }\n\n    return {\n      fullName\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAgBA,SAASA,QAAT,QAAyB,KAAzB;AACA,eAAe;EACbC,IAAI,EAAE,0BADO;EAEbC,KAAK,EAAE,CAAC,WAAD,EAAc,UAAd,CAFM;;EAIb;EACA;EACAC,KAAK,CAACD,KAAD,EAAQE,OAAR,EAAiB;IACpB,MAAMC,QAAO,GAAIL,QAAQ,CAAC,MAAM;MAC9B,OAAQ,GAAEE,KAAK,CAACI,SAAS,IAAIJ,KAAK,CAACK,QAAS,EAA5C;IACD,CAFwB,CAAzB,CADoB,CAKpB;;IACA,SAASC,SAAT,GAAqB;MACjB;MACA;MACAJ,OAAO,CAACK,IAAR,CAAa,WAAb;IACJ;;IACA,OAAO;MACLJ;IADK,CAAP;EAGD;;AApBY,CAAf","names":["computed","name","props","setup","context","fullName","firstName","lastName","sendEvent","emit"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/PropsCompositionApiChild.vue"],"sourcesContent":["<template>\n  <!-- this file is the child component -->\n  <div>\n    <h4>PropsCompositionApiChild</h4>\n    <!-- <h5>Hello Child Props {{ firstName }} {{ lastName }}</h5> -->\n    <h5>Hello Child props with computed {{ fullName }}</h5>\n\n    <!-- the better way to define our template replace the first \n    and last name with a signle computed properties -->\n\n    <!-- COMPOSITION API EVENT  -->\n    <button @click=\"sendEvent\">CALL HEROS</button>\n  </div>\n</template>\n\n<script>\nimport { computed } from \"vue\";\nexport default {\n  name: \"PropsCompositionApiChild\",\n  props: [\"firstName\", \"lastName\"],\n\n  //recives an argument which is the props for this component\n  //context is expose the emit event\n  setup(props, context) {\n    const fullName = computed(() => {\n      return `${props.firstName} ${props.lastName}`;\n    });\n\n    //how to emit a custom event in teh setup method\n    function sendEvent() {\n        //1 st argument custom event name\n        //2 nd argument is any value that we would like to send back to the parent\n        context.emit('callHeros')\n    }\n    return {\n      fullName,\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}