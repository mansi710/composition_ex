{"ast":null,"code":"import { provide, ref, reactive, toRefs } from \"vue\";\nimport ChildA from \"./ChildA.vue\";\nexport default {\n  name: \"ReplacingProvideInject\",\n  components: {\n    ChildA\n  },\n\n  setup() {\n    // 1 st argument label for the value\n    // 2 nd argument is the actual value we want to provide\n    provide(\"c_username\", \"Ruhan\"); //through REF\n\n    const count = ref(10);\n    increment;\n    provide(\"c_count\", count); //Though  and Reactive\n\n    const state = reactive({\n      firstName: \"ruhan\",\n      lastName: \"harwani\"\n    });\n    provide(\"c_hero\", state);\n    return {\n      count,\n      ...toRefs(state)\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAYA,SAASA,OAAT,EAAkBC,GAAlB,EAAuBC,QAAvB,EAAiCC,MAAjC,QAA+C,KAA/C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe;EACbC,IAAI,EAAE,wBADO;EAEbC,UAAU,EAAE;IACVF;EADU,CAFC;;EAMbG,KAAK,GAAG;IACN;IACA;IACAP,OAAO,CAAC,YAAD,EAAe,OAAf,CAAP,CAHM,CAKN;;IACA,MAAMQ,KAAI,GAAIP,GAAG,CAAC,EAAD,CAAjB;IACAQ,SAAQ;IACRT,OAAO,CAAC,SAAD,EAAYQ,KAAZ,CAAP,CARM,CAUN;;IACA,MAAME,KAAI,GAAIR,QAAQ,CAAC;MACrBS,SAAS,EAAE,OADU;MAErBC,QAAQ,EAAE;IAFW,CAAD,CAAtB;IAIAZ,OAAO,CAAC,QAAD,EAAWU,KAAX,CAAP;IAEA,OAAO;MACLF,KADK;MAEL,GAAGL,MAAM,CAACO,KAAD;IAFJ,CAAP;EAID;;AA3BY,CAAf","names":["provide","ref","reactive","toRefs","ChildA","name","components","setup","count","increment","state","firstName","lastName"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReplacingProvideInject.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>REPLACING PROVIDE INJECT</h3>\n    <h4>Parent Component count {{ count }}</h4>\n    <h4>Parent Component hero {{ firstName }} {{ lastName }}</h4>\n\n    <button @click=\"incrementCount\">Increment Count</button>\n    <ChildA />\n  </div>\n</template>\n\n<script>\nimport { provide, ref, reactive, toRefs } from \"vue\";\nimport ChildA from \"./ChildA.vue\";\n\nexport default {\n  name: \"ReplacingProvideInject\",\n  components: {\n    ChildA,\n  },\n\n  setup() {\n    // 1 st argument label for the value\n    // 2 nd argument is the actual value we want to provide\n    provide(\"c_username\", \"Ruhan\");\n\n    //through REF\n    const count = ref(10);\n    increment\n    provide(\"c_count\", count);\n\n    //Though  and Reactive\n    const state = reactive({\n      firstName: \"ruhan\",\n      lastName: \"harwani\",\n    });\n    provide(\"c_hero\", state);\n\n    return {\n      count,\n      ...toRefs(state),\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}