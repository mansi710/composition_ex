{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  name: \"TemplateRef\",\n\n  mounted() {\n    this.$refs.inputRef.focus();\n  },\n\n  setup() {\n    const inputRef = ref(null);\n    return {};\n  }\n\n};","map":{"version":3,"mappings":"AAaA,SAASA,GAAT,QAAoB,KAApB;AACA,eAAe;EACbC,IAAI,EAAE,aADO;;EAEbC,OAAO,GAAG;IACR,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB;EACD,CAJY;;EAMbC,KAAK,GAAG;IACN,MAAMF,QAAO,GAAIJ,GAAG,CAAC,IAAD,CAApB;IAEA,OAAM,EAAN;EAGD;;AAZY,CAAf","names":["ref","name","mounted","$refs","inputRef","focus","setup"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/TemplateRef.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>With Options API</h3>\n    <input type=\"text\" ref=\"inputRef\" />\n    <h3>TEMPLATE REF WITH COMPOSITION API EXAMPLE</h3>\n    <!-- input element with ref attribute = inputRef and inside script block we have \n    mounted lifecycle hook where we access the refs using .$refs and on the input ref\n    we call the focus method -->\n    <input type=\"text\" ref=\"inputRef\" />\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nexport default {\n  name: \"TemplateRef\",\n  mounted() {\n    this.$refs.inputRef.focus();\n  },\n\n  setup() {\n    const inputRef = ref(null);\n\n    return{\n      \n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}