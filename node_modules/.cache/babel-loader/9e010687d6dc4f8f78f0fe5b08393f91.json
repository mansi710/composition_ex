{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  name: \"ReactivityAndtoRefs\",\n\n  setup() {\n    //vue doesn't know how to changes on value\n    // let name = \"mansi\";\n    const name = ref(\"mansi\");\n    setTimeout(() => {\n      name.value = \"rushan\"; // ui is not refalcing that so  ref function and vue's\n      // distinct reactivity comes under to the picture\n\n      console.log(name);\n    }, 2000);\n    return {\n      name\n    };\n  }\n\n};","map":{"version":3,"mappings":"AASA,SAASA,GAAT,QAAoB,KAApB;AACA,eAAe;EACbC,IAAI,EAAE,qBADO;;EAEbC,KAAK,GAAG;IACN;IACA;IACA,MAAMD,IAAG,GAAID,GAAG,CAAC,OAAD,CAAhB;IACAG,UAAU,CAAC,MAAM;MACfF,IAAI,CAACG,KAAL,GAAa,QAAb,CADe,CAEf;MACA;;MACAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;IACD,CALS,EAKP,IALO,CAAV;IAMA,OAAO;MACLA;IADK,CAAP;EAGD;;AAfY,CAAf","names":["ref","name","setup","setTimeout","value","console","log"],"sourceRoot":"","sources":["/var/www/html/newData/mansi/composition_api_project_example/src/components/ReactivityAndtoRefs.vue"],"sourcesContent":["<template>\n  <!-- ref and reactive function which returns reactive refrence that can be store in a constant  -->\n  <div>\n    <h3>REACTIVITY AND TO REFS</h3>\n    <h4>{{ name }}</h4>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nexport default {\n  name: \"ReactivityAndtoRefs\",\n  setup() {\n    //vue doesn't know how to changes on value\n    // let name = \"mansi\";\n    const name = ref(\"mansi\");\n    setTimeout(() => {\n      name.value = \"rushan\";\n      // ui is not refalcing that so  ref function and vue's\n      // distinct reactivity comes under to the picture\n      console.log(name);\n    }, 2000);\n    return {\n      name,\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}